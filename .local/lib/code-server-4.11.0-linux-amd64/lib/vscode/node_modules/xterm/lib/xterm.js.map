{"version":3,"file":"xterm.js","mappings":"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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/AccessibleBuffer.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/OscLinkProvider.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/renderer/shared/Constants.ts","webpack://xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/browser/services/ThemeService.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/MultiKeyMap.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TaskQueue.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/OscLinkService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._announceCharacters.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._liveRegionDebouncer);\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(toDisposable(() => this._accessibilityContainer.remove()));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IBufferElementProvider, ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IRenderService, IThemeService } from 'browser/services/Services';\nimport { IOptionsService } from 'common/services/Services';\nimport { ITerminalOptions } from 'xterm';\nimport { IDisposable } from 'common/Types';\n\nexport class AccessibleBuffer extends Disposable {\n  private _element: HTMLElement;\n  private _isAccessibleBufferActive: boolean = false;\n  public get isAccessibleBufferActive(): boolean { return this._isAccessibleBufferActive; }\n  private _provider: IBufferElementProvider | undefined;\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IOptionsService optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessible buffer before Terminal.open');\n    }\n\n    this._element = document.createElement('div');\n    this._element.setAttribute('role', 'document');\n    this._element.ariaRoleDescription = Strings.accessibleBuffer;\n    this._element.tabIndex = 0;\n    this._element.classList.add('xterm-accessible-buffer');\n    this._terminal.element.insertAdjacentElement('afterbegin', this._element);\n\n    this.register(addDisposableDomListener(this._element, 'keydown', (ev: KeyboardEvent) => {\n      if (ev.key === 'Tab') {\n        this._isAccessibleBufferActive = false;\n      }\n    }\n    ));\n    this.register(addDisposableDomListener(this._element, 'focus', () => this._refreshAccessibleBuffer()));\n    this.register(addDisposableDomListener(this._element, 'focusout', (e) => {\n      if (!this._element.contains(e.srcElement)) {\n        this._isAccessibleBufferActive = false;\n      }\n    }));\n\n    this._handleColorChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleColorChange(e)));\n    this._handleFontOptionChange(optionsService.options);\n    this.register(optionsService.onMultipleOptionChange(['fontSize', 'fontFamily', 'letterSpacing', 'lineHeight'], () => this._handleFontOptionChange(optionsService.options)));\n    this.register(toDisposable(() => this._element.remove()));\n  }\n\n  public registerBufferElementProvider(bufferProvider: IBufferElementProvider): IDisposable {\n    if (this._provider) {\n      throw new Error('Buffer element provider already registered');\n    }\n    this._provider = bufferProvider;\n    return {\n      dispose: () => {\n        this._provider = undefined;\n      }\n    };\n  }\n\n  private _refreshAccessibleBuffer(): void {\n    if (!this._terminal.viewport) {\n      return;\n    }\n    this._isAccessibleBufferActive = true;\n    this._element.scrollTop = this._element.scrollHeight;\n    const bufferElements = this._provider?.provideBufferElements();\n    if (!bufferElements) {\n      const { bufferElements } = this._terminal.viewport.getBufferElements(0);\n      for (const element of bufferElements) {\n        if (element.textContent) {\n          element.textContent = element.textContent.replace(new RegExp(' ', 'g'), '\\xA0');\n        }\n      }\n      this._element.replaceChildren(...bufferElements);\n    } else {\n      this._element.replaceChildren(bufferElements);\n    }\n  }\n\n  private _handleColorChange(colorSet: ReadonlyColorSet): void {\n    this._element.style.backgroundColor = colorSet.background.css;\n    this._element.style.color = colorSet.foreground.css;\n  }\n\n  private _handleFontOptionChange(options: Required<ITerminalOptions>): void {\n    this._element.style.fontFamily = options.fontFamily;\n    this._element.style.fontSize = `${options.fontSize}px`;\n    this._element.style.lineHeight = `${options.lineHeight * (this._renderService.dimensions.css.cell.height)}px`;\n    this._element.style.letterSpacing = `${options.letterSpacing}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n\n// eslint-disable-next-line prefer-const\nexport let accessibleBuffer = 'Accessibility buffer';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange, IBufferElementProvider } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { AccessibleBuffer } from './AccessibleBuffer';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n  private _accessibleBuffer: AccessibleBuffer | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  public registerBufferElementProvider(bufferProvider: IBufferElementProvider): IDisposable {\n    if (!this._accessibleBuffer) {\n      throw new Error ('Cannot register buffer element provider when terminal has not been opened yet');\n    }\n    return this._accessibleBuffer.registerBufferElementProvider(bufferProvider);\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n\n    this._accessibleBuffer = this._instantiationService.createInstance(AccessibleBuffer, this);\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      if (this._accessibleBuffer?.isAccessibleBufferActive) {\n        return;\n      }\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration, IBufferElementProvider } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public registerBufferElementProvider(bufferProvider: IBufferElementProvider): IDisposable {\n    return this._core.registerBufferElementProvider(bufferProvider);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","self","AccessibilityManager","Disposable","constructor","_terminal","super","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","document","createElement","classList","add","_liveRegion","setAttribute","appendChild","_liveRegionDebouncer","register","TimeBasedDebouncer","_announceCharacters","bind","element","Error","insertAdjacentElement","onRender","e","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","toDisposable","remove","MAX_ROWS_TO_READ","length","shift","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","test","push","refresh","rows","AccessibleBuffer","optionsService","_renderService","themeService","_isAccessibleBufferActive","_element","ariaRoleDescription","accessibleBuffer","tabIndex","addDisposableDomListener","ev","_refreshAccessibleBuffer","contains","srcElement","_handleColorChange","colors","onChangeColors","_handleFontOptionChange","options","onMultipleOptionChange","isAccessibleBufferActive","registerBufferElementProvider","bufferProvider","_provider","dispose","undefined","viewport","scrollTop","scrollHeight","bufferElements","provideBufferElements","replaceChildren","getBufferElements","replace","RegExp","colorSet","style","backgroundColor","background","css","color","foreground","fontFamily","fontSize","lineHeight","dimensions","cell","letterSpacing","IOptionsService","IRenderService","IThemeService","prepareTextForTerminal","text","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","height","zIndex","focus","selectionService","clipboardData","setData","selectionText","preventDefault","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","TwoKeyMap","_css","setCss","bg","fg","set","getCss","get","setColor","getColor","clear","node","type","handler","addEventListener","disposed","removeEventListener","Linkifier2","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","onResize","_clearCurrentLink","currentLink","_currentLink","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_mouseService","_handleMouseMove","_handleMouseDown","_handleMouseUp","position","_positionFromMouseEvent","composedPath","target","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","entries","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","buffer","ydisp","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","coords","getCoords","x1","y1","x2","y2","IBufferService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","line","lines","result","linkHandler","rawOptions","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","window","open","opener","location","href","console","warn","IOscLinkService","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","ScreenDprMonitor","_currentDevicePixelRatio","devicePixelRatio","clearListener","setListener","listener","_listener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","Terminal","CoreTerminal","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_onWillOpen","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","removeChild","onFocus","onWillOpen","_accessibleBuffer","_themeService","req","acc","ident","channels","toColorRGB","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","rgba","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_accessibilityManager","_handleTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","isChromeOS","_coreBrowserService","CoreBrowserService","defaultView","ICoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","hasRenderer","setRenderer","_createRenderer","MouseService","IMouseService","Viewport","amount","scrollLines","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","onDimensionsChange","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","canvas","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","startLine","endLine","cursorElement","currentLine","isWrapped","translateToString","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_coreBrowseService","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_width","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","translateBufferLineToString","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier2","instantiationService","_terminalClass","_rowElements","_cellToRowElements","_rowContainer","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","cursor","cursorAccent","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","handleDevicePixelRatioChange","pop","handleCharSizeChanged","children","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","rowElement","lineData","cursorStyle","Int16Array","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","cellMap","joinedRanges","getJoinedCharacters","getCode","NULL_CELL_CODE","elemIndex","isJoined","lastCharX","JoinedCellData","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","forEachDecorationAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","resolvedBg","selectionForeground","isFocused","_addStyle","padStart","toString","multiplyOpacity","_applyMinimumContrast","subarray","fill","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","contrastCache","ensureContrastRatio","getAttribute","padChar","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","static","newRange","inRange","_isFocused","_cachedIsFocused","hasFocus","queueMicrotask","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderer","_renderDebouncer","RenderDebouncer","_renderRows","_screenDprMonitor","_fullRefresh","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","slice","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_onChangeColors","_contrastCache","ColorContrastCache","_colors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsModeOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","_windowsMode","_onScrollApi","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","isNaN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","getAttrData","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","addLineToLink","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","array","_data","third","fourth","navigator","userAgent","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","ext","_ext","_urlId","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","BufferLine","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","unshift","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","onDispose","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","eAttrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","isDisposed","_id","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","num","ucs","bisearch","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","terminal","loadedAddon","_wrappedAddonDispose","_buffer","init","viewportY","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","wasUserInput","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","xmin","xmax","getKeyIterator","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","BufferNamespaceApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}